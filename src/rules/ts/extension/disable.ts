import { State } from "../../state";

export default {
  id: "disable/extension",
  rules: {
    // "class-methods-use-this": State.OFF /* ESLint now supports TS */,
    // "consistent-return": State.OFF /* tsc */,
    // "default-param-last": State.OFF /* ESLint now supports TS */,
    "dot-notation": State.OFF,
    // "init-declarations": State.OFF /* ESLint now supports TS */,
    // "max-params": State.OFF /* ESLint now supports TS */,
    // "no-array-constructor": State.OFF /* ESLint now supports TS */,
    // "no-dupe-class-members": State.OFF /* tsc, although ESLint now supports TS */,
    // "no-empty-function": State.OFF /* ESLint now supports TS */,
    "no-implied-eval": State.OFF,
    // "no-invalid-this": State.OFF /* tsc, although ESLint now supports TS */,
    // "no-loop-func": State.OFF /* ESLint now supports TS */,
    // "no-magic-numbers": State.OFF /* ESLint now supports TS */,
    // "no-redeclare": State.OFF /* tsc */,
    "no-restricted-imports": State.OFF,
    // "no-shadow": State.OFF /* ESLint now supports TS */,
    "no-throw-literal": State.OFF /* @typescript-eslint/only-throw-error */,
    // "no-unused-expressions": State.OFF /* ESLint now supports TS */,
    "no-unused-vars": State.OFF,
    // "no-use-before-define": State.OFF /* ESLint now supports TS */,
    // "no-useless-constructor": State.OFF /* ESLint now supports TS */,
    "prefer-destructuring": State.OFF,
    "prefer-promise-reject-errors": State.OFF,
    "require-await": State.OFF,
  } as const,
};
